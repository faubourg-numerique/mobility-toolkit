version: '3'

services:
  mtk: 
    image: scorpiobroker/mtk:latest
    environment:
      URL: http://scorpio:9090
      INTERVAL: 600
    depends_on:
      - scorpio
  emission_ngsild: 
    depends_on:
      - db
      - scorpio
    image: scorpiobroker/emissionadapter
    environment:
      INTERVAL: 900
      URL: http://scorpio:9090
      DB_URL: db
    restart: on-failure
  mdmadapter:
    image: scorpiobroker/mdmadapter
    environment:
      INTERVAL: 60
      URL: http://scorpio:9090
      SUBSCRIPTION_ID: urn:sub:test1
      P12_CERT: /something/
      P12_PASS: pass
  grafana:
    image: grafana/grafana:7.3.1
    user: "1000"
    ports:
      - "3000:3000"
    volumes:
      - "./grafana-data:/var/lib/grafana"
  zookeeper:
    image: zookeeper
    ports:
      - "2181"
  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    logging:
      driver: none
  postgres:
    image: mdillon/postgis
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
  scorpio:
    image: scorpiobroker/scorpio:scorpio-aaio-no-eureka_latest
    hostname: scorpio
    environment:
      spring_args: --defaultLimit=5000 --maxLimit=50000
    ports:
      - "1996:9090"
    depends_on:
      - kafka
      - postgres
    logging:
      driver: none
  web-server:
    image: emission/e-mission-server.dev.server-only:latest
    depends_on:
      - db
    environment:
      - SERVER_REPO=https://github.com/e-mission/e-mission-server.git
      - SERVER_BRANCH=master
      - DB_HOST=db
      - WEB_SERVER_HOST=0.0.0.0
      # CHANGEME: enable this for autoreloading
      # - CHOKIDAR_USEPOLLING=true
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    volumes:
      # specify the host directory where the source code should live
      # If this is ~/e-mission-server-docker, then you can edit the files at
      # ~/e-mission-server-docker/src/e-mission-server/emission/...
      # - CHANGEME:/src/
      - ~/e-mission-server-docker/src:/usr/src/app/
      - ~/e-mission-server-docker/logs:/var/tmp
  db:
    image: mongo:3.6
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      #This port binding allows you to access the database server outside the host machine. Remove this is you don't need this
      #functionality
      - "27017:27017"

    #Volumes is the preferred way to persist data generated by a container. In this case we use a volume to persist the contents
    #of the data base. Learn more about how to use volumes here: https://docs.docker.com/storage/volumes/
    # And learn how to configure volumes in your compose file here: https://docs.docker.com/compose/compose-file/#volume-configuration-reference
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:
